# /etc/nginx/nginx.conf
user  nginx;
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # Load MIME types so .css is served as text/css
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Optional: gzip (safe defaults)
    gzip on;
    gzip_min_length 1024;
    gzip_types text/css application/javascript text/javascript application/json text/xml application/xml;

    server {
        listen 80;
        server_name localhost;
        root /var/www;
        index index.php index.html;
        
        # Completely block access to /test/ folder in production
        location /test/ {
            deny all;
            return 404; # Return 404 to hide existence
        }
        
        # Block sensitive files
        location ~ /\. {
            deny all;
            return 404;
        }
        
        location ~ \.(env|conf|sql)$ {
            deny all;
            return 404;
        }
        
        # Public routes (no auth required) - index.php, login_router.php
        location ~ ^/(index|login_router)\.php$ {
            try_files $uri $uri/ =404;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            fastcgi_pass 127.0.0.1:9000;
        }
        
        # Protected routes (require authentication) - all other PHP files
        location ~ \.php$ {
            try_files $uri $uri/ =404;

            # Use auth_request to check authentication
            auth_request /auth_gatekeeper.php;

            # Redirect to index.php if authentication fails
            error_page 401 403 = @login_redirect;

            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            fastcgi_pass 127.0.0.1:9000;
        }

        # Handle authentication failures by redirecting to login
        location @login_redirect {
            return 302 /index.php;
        }
        
        # Internal auth check endpoint
        location = /auth_gatekeeper.php {
            internal;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            fastcgi_pass 127.0.0.1:9000;
        }
        
        # Static files with caching and security headers
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            try_files $uri =404;
        }
        
        # Security headers for all responses
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    }
}
